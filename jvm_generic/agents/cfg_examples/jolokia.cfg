# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# Default settings or settings for only one instance:
# server   = "127.0.0.1"
# port     = 8080
# user     = "monitoring"
# password = None
# mode     = "digest"
# vars     = []
# suburi   = "jolokia"
# instance = None


# Example for configuring multiple instances. Not-specified
# values will be taken from the upper defaults
# instances = [
#   { 
#       "port"     : 8080,
#       "instance" : "FOO",
#   },
#   {
#       "server"   : "10.1.88.5",
#       "port"     : 8081,
#       "instance" : "BAR",
#       "user"     : "harri",
#       "password" : "hirsch",
#   }
#   {
#       "port"     : 8082,
#       "instance" : "SUPERAPP",
#       "vars"     : [
#            ( "*:*,name=LoginServlet/requestCount", "rate", [ "WebModule", "name" ] ),
#            ( "*:*,name=LoginServlet/requestCount,errorCount", "rate.errorPerRequest", [ "WebModule", "name" ] ),
#            ( "*:*,name=LogoutServlet/requestCount,errorCount", "rate.errorPerRequest", [ "WebModule", "name" ] ),
#            ( "*:*,name=LogoutServlet/countAllocated", "gauge", [ "WebModule", "name" ] ),
#       ]
#   }
# ]


# vars explained:
# Generic definition:
#   - ( "MBeanPath/Attribute(s)", "<rate|gauge|string>[.AttibuteGroup]", [ "ValuesTheServiceNameGetsPulledFrom"[, "..." ]] ),
#
#     "MBeanPath/Attribute(s)"        : here you specify, where the Value(s) come from, see jolokia documentation for further
#                                       Information. (http://jolokia.org/reference/html/)
#     "<rate|gauge|string>[.AttibuteGroup]"  : 
#                                       rate, gauge or string are keywords and mandatory; optionally you can add another String
#                                       seperated by a  "." to group Attributes together or specify a more speaking name 
#                                       for the resulting service in check_mk gui.
#     "ValuesTheServiceNameGetsPulledFrom" [, "..."] : 
#                                       these values are needed to generate short Servicenames. You specify the left value of a
#                                       key=value pair and get the right value as part of the service description.
#
# rate:
#   - 2 values: the check assumes a rate in the form of lower/higer value
#     example: errors/requests; cachehits/requests
#   - 1 value: the check assumes value/min
#     example: requests/min; GCs/min;
# gauge:
#   - n values: the actual value(s) are returned and one pnp graph including all values will be generated.
#     example: logged in users; sessions etc.
#
#
# the output of mk_jolokia should look like this:
# <<<jolokia_generic>>>
# # 
# # <instance|port>,Application[,Servlet] generic.<gauge|rate|string>[.GroupingName].<Attribute> value
# # Tomcat Sample
# 8080,/pwm,LoginServlet generic.rate.requestCount 878
# 8080,/pwm,LoginServlet generic.rate.errorPerRequest.requestCount 878
# 8080,/pwm,LoginServlet generic.rate.errorPerRequest.errorCount 0
# 8080,/pwm,LogoutServlet generic.rate.errorPerRequest.requestCount 5
# 8080,/pwm,LogoutServlet generic.rate.errorPerRequest.errorCount 0
# 8080,/pwm,LogoutServlet generic.gauge.countAllocated 0
# # Weblogic Sample
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConStatistic.CurrCapacityHighCount 1
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConStatistic.ActiveConnectionsCurrentCount 0
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConStatistic.CurrCapacity 1
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConErrors.WaitingForConnectionFailureTotal 0
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConErrors.WaitSecondsHighCount 0
# dmst1c00s00,dmst1c00s00 generic.gauge.JDBCConErrors.LeakedConnectionCount 0

